### load the rpy2 extension
get_ipython().run_line_magic('load_ext', 'rpy2.ipython')

get_ipython().run_cell_magic('R', "-w 400 -h 400 -u px # instead of px, you can also choose 'in', 'cm', or 'mm'", 'library(tm)\nlibrary(wordcloud)\nlibrary(SnowballC)\n\ncontents <- readLines(\'d:/temp/wordcloud/contention.txt\')\ndoc.vec <- VectorSource(contents)\ndoc.corpus <- Corpus(doc.vec)\n#xkcd.df <- read.csv(file.path(path, datafiles))\n#xkcd.corpus <- Corpus(DataframeSource(data.frame(xkcd.df[, 3])))\ncleaned <- tm_map(doc.corpus,stripWhitespace)\ncleaned <- tm_map(cleaned, content_transformer(tolower))\ncleaned <- tm_map(cleaned,removeWords,stopwords("english"))\n#cleaned <- tm_map(cleaned,stemDocument)\ncleaned <- tm_map(cleaned,removeNumbers)\ncleaned <- tm_map(cleaned,removePunctuation)\n\ncleaned <- tm_map(cleaned,removeWords, "customer")\ncleaned <- tm_map(cleaned,removeWords, "cust")\ncleaned <- tm_map(cleaned,removeWords, "client")\ncleaned <- tm_map(cleaned,removeWords, "replace")\ncleaned <- tm_map(cleaned,removeWords, "replaced")\ncleaned <- tm_map(cleaned,removeWords, "repl")\ncleaned <- tm_map(cleaned,removeWords, "states")\ncleaned <- tm_map(cleaned,removeWords, "perform")\ncleaned <- tm_map(cleaned,removeWords, "performed")\ncleaned <- tm_map(cleaned,removeWords, "checked")\ncleaned <- tm_map(cleaned,removeWords, "found")\ncleaned <- tm_map(cleaned,removeWords, "advise")\ncleaned <- tm_map(cleaned,removeWords, "inspect")\ncleaned <- tm_map(cleaned,removeWords, "inspected")\ncleaned <- tm_map(cleaned,removeWords, "tech")\ncleaned <- tm_map(cleaned,removeWords, "technician")\ncleaned <- tm_map(cleaned,removeWords, "new")\ncleaned <- tm_map(cleaned,removeWords, "test")\ncleaned <- tm_map(cleaned,removeWords, "please")\n\nwordcloud(cleaned, max.words=100, colors=brewer.pal(7,"Dark2"),random.order=FALSE, scale=c(5,0.5))')

import pandas as pd

contention = pd.read_excel(r'\\hdcnas02\AQ_MarketQuality\DensoOBD\WarrantySummaries\35830 - Sunroof Switch\12G_Civic_35830.xlsx','Claims')

get_ipython().run_line_magic('R', '-i contention')

get_ipython().run_cell_magic('R', "-w 400 -h 400 -u px # instead of px, you can also choose 'in', 'cm', or 'mm'", 'df <- as.data.frame(contention)\nlibrary(tm)\nlibrary(wordcloud)\nlibrary(SnowballC)\n\ndoc.corpus <- Corpus(VectorSource(contention$CUSTOMER_CONTENTION_TEXT))\ncleaned <- tm_map(doc.corpus,stripWhitespace)\ncleaned <- tm_map(cleaned, content_transformer(tolower))\ncleaned <- tm_map(cleaned,removeWords,stopwords("english"))\n#cleaned <- tm_map(cleaned,stemDocument)\ncleaned <- tm_map(cleaned,removeNumbers)\ncleaned <- tm_map(cleaned,removePunctuation)\n\n# Remove "worthless" words\ncleaned <- tm_map(cleaned,removeWords, "customer")\ncleaned <- tm_map(cleaned,removeWords, "cust")\ncleaned <- tm_map(cleaned,removeWords, "client")\ncleaned <- tm_map(cleaned,removeWords, "replace")\ncleaned <- tm_map(cleaned,removeWords, "replaced")\ncleaned <- tm_map(cleaned,removeWords, "repl")\ncleaned <- tm_map(cleaned,removeWords, "states")\ncleaned <- tm_map(cleaned,removeWords, "perform")\ncleaned <- tm_map(cleaned,removeWords, "performed")\ncleaned <- tm_map(cleaned,removeWords, "checked")\ncleaned <- tm_map(cleaned,removeWords, "found")\ncleaned <- tm_map(cleaned,removeWords, "advise")\ncleaned <- tm_map(cleaned,removeWords, "inspect")\ncleaned <- tm_map(cleaned,removeWords, "inspected")\ncleaned <- tm_map(cleaned,removeWords, "tech")\ncleaned <- tm_map(cleaned,removeWords, "technician")\ncleaned <- tm_map(cleaned,removeWords, "new")\ncleaned <- tm_map(cleaned,removeWords, "test")\ncleaned <- tm_map(cleaned,removeWords, "please")\n\nwordcloud(cleaned, max.words=50, colors=brewer.pal(6,"Dark2"),random.order=FALSE, scale=c(5,0.5))')

